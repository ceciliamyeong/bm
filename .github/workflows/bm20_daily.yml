name: BM20 Daily

on:
  schedule:
    - cron: "10 23 * * *"   # 매일 08:10 KST (정산/429 타이밍 회피)
  workflow_dispatch: {}

# 동시 실행 충돌 방지
concurrency:
  group: bm20-daily-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest

    # index.html/archive 갱신을 main에 커밋할 수 있도록
    permissions:
      contents: write

    env:
      TZ: Asia/Seoul

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Korean fonts (Nanum + Noto CJK)
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-nanum fonts-noto-cjk fontconfig
          sudo fc-cache -f -v

      # ✅ 1) 리포트 생성 (반드시 먼저 실행)
      - name: Run BM20 generator
        env:
          OUT_DIR: out
          TZ: Asia/Seoul
        run: |
          python bm20_daily.py

      # 🔎 디버그: out/ 트리 확인
      - name: Debug — show out tree
        run: |
          echo "PWD=$(pwd)"
          ls -la
          echo "---- out ----"
          ls -la out || true
          echo "---- out recursive ----"
          find out -maxdepth 2 -type d -print || true

      # ✅ 2) 최신 폴더 자동 감지 → archive로 복사 → index.html 갱신
      - name: Generate site (latest + archive)
        env:
          TZ: Asia/Seoul
        run: |
          python scripts/generate_report.py
          # Jekyll 무시 파일(캐싱/빌드 이슈 방지)
          echo "" > .nojekyll

          # ✅ 2.5) latest.html + 최신 이미지 고정 이름으로 생성
      - name: Publish latest (fixed assets)
        run: |
          set -euo pipefail
          DATE=$(TZ=Asia/Seoul date +%F)
          SRC="bm20/archive/$DATE"

          # 안전장치: 오늘자 산출물 확인
          test -f "$SRC/bm20_daily_${DATE}.html"
          test -f "$SRC/bm20_bar_${DATE}.png"
          test -f "$SRC/bm20_trend_${DATE}.png"

          # latest.html 생성 (이미지 경로를 고정 이름으로 치환)
          sed "s/bm20_bar_${DATE}\.png/bm20_bar_latest.png/g; s/bm20_trend_${DATE}\.png/bm20_trend_latest.png/g" \
            "$SRC/bm20_daily_${DATE}.html" > bm20/latest.html

          # 최신 이미지 고정 파일명으로 복사
          cp "$SRC/bm20_bar_${DATE}.png"   bm20/bm20_bar_latest.png
          cp "$SRC/bm20_trend_${DATE}.png" bm20/bm20_trend_latest.png


      # ✅ 3) 변경사항 커밋 & 푸시 (rebase로 충돌 방지)
      - name: Commit & Push (with pull --rebase)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          BRANCH="${GITHUB_REF#refs/heads/}"
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin ${BRANCH}
          git pull --rebase origin ${BRANCH} || true
          git add -A
          git commit -m "chore: auto daily report for $(date -u +'%Y-%m-%d')" || echo "nothing to commit"
          git push origin HEAD:${BRANCH}
