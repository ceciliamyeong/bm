name: BM20 Daily (BMindex, 2018-base)

on:
  schedule:
    - cron: "10 23 * * *"   # 매일 08:10 KST (UTC 23:10)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Seoul
      BM20_OUTPUT_ROOT: out
      # 아래 두 값은 bm20_daily.py에서는 안 씁니다. 필요 없으면 지워도 OK.
      BM20_BASE_DATE: "2024-01-01"
      BM20_BASE_EXCLUDE_CONSISTENT: "0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install pandas numpy matplotlib python-dateutil

      - name: Install Korean fonts (Nanum + Noto CJK)
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-nanum fonts-noto-cjk fontconfig
          sudo fc-cache -f -v

      # 필요 시 기준일 바꿀 때 캐시 초기화 (옵션)
      - name: Reset base cache (optional)
        run: rm -f out/base_cache.json || true

      - name: Run BM20 daily
        run: |
          set -euo pipefail
          if [ ! -f bm20_daily.py ]; then
            echo "::error::bm20_daily.py not found at repo root."
            exit 1
          fi
          python bm20_daily.py

      # ⬇️ 최신 산출물 루트/서브경로로 복사 + 간단 latest.html 생성
      - name: Prepare site artifacts (copy TXT/PNG/PDF and build latest.html)
        run: |
          set -euo pipefail

          DATE=$(TZ=Asia/Seoul date +%F)
          OUTDIR="out/${DATE}"

          if [ ! -d "$OUTDIR" ]; then
            echo "::error::Output dir not found: $OUTDIR"
            exit 1
          fi

          mkdir -p bm

          # 1) 데일리 TXT/이미지/PDF를 bm/와 루트로 동시 복사
          for f in \
            "${OUTDIR}/BM20_daily_${DATE}.txt" \
            "${OUTDIR}/kimchi_premium_${DATE}.png" \
            "${OUTDIR}/kimchi_premium_${DATE}.pdf" \
            "${OUTDIR}/BM20_weekly_${DATE}.txt" \
            "${OUTDIR}/BM20_weekly_${DATE}.pdf" \
            "${OUTDIR}/BM20_monthly_${DATE}.txt" \
            "${OUTDIR}/BM20_monthly_${DATE}.pdf"
          do
            if [ -f "$f" ]; then
              cp -f "$f" bm/
              cp -f "$f" .
              echo "copied: $f"
            fi
          done

          # 2) 데일리 TXT를 간단한 latest.html로 변환 (뉴스 미니페이지)
          TXT="${OUTDIR}/BM20_daily_${DATE}.txt"
          if [ -f "$TXT" ]; then
            echo "Building latest.html from ${TXT}"
            {
              echo '<!doctype html><meta charset="utf-8"><title>BM20 — Latest</title>'
              echo '<style>body{font-family:-apple-system,BlinkMacSystemFont,"NanumGothic","Noto Sans CJK","Malgun Gothic",Arial,sans-serif;background:#fafbfc;color:#111;max-width:760px;margin:40px auto;padding:0 16px}pre{white-space:pre-wrap;line-height:1.7}</style>'
              echo "<h1>BM20 데일리 (${DATE})</h1>"
              echo "<pre>"
              cat "$TXT"
              echo "</pre>"
              # 김치 프리미엄 이미지가 있으면 아래에 표시
              IMG="kimchi_premium_${DATE}.png"
              if [ -f "bm/${IMG}" ]; then
                echo "<h2>Kimchi Premium</h2><img src=\"bm/${IMG}\" style=\"max-width:100%;height:auto;\"/>"
              fi
            } > latest.html
            cp -f latest.html bm/latest.html
          else
            echo "::warning::Daily TXT not found, latest.html skipped"
          fi

          echo "---- files at repo root ----"
          ls -l latest.html || true
          ls -l BM20_* || true
          ls -l kimchi_premium_* || true
          echo "---- files under bm/ ----"
          ls -l bm/ || true

      - name: Commit & Push outputs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          DATE=$(TZ=Asia/Seoul date +%F)
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add -A \
            latest.html \
            bm/latest.html \
            bm/BM20_daily_${DATE}.txt \
            bm/kimchi_premium_${DATE}.png \
            bm/kimchi_premium_${DATE}.pdf \
            bm/BM20_weekly_${DATE}.txt bm/BM20_weekly_${DATE}.pdf \
            bm/BM20_monthly_${DATE}.txt bm/BM20_monthly_${DATE}.pdf \
            "out/${DATE}" || true

          git commit -m "BM20 daily (BMindex) ${DATE}" || echo "No changes"
          git pull --rebase --autostash
          git push
