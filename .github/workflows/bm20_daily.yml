name: BM20 Daily (Yahoo, 2024-base)

on:
  schedule:
    - cron: "10 23 * * *"   # 매일 08:10 KST (UTC 23:10)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Seoul
      OUT_DIR: out
      BM20_BASE_DATE: "2024-01-01"
      BM20_BASE_EXCLUDE_CONSISTENT: "0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install requests pandas matplotlib python-dateutil reportlab

      - name: Install Korean fonts (Nanum + Noto CJK)
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-nanum fonts-noto-cjk fontconfig
          sudo fc-cache -f -v

      # 필요 시 기준일 바꿀 때 캐시 초기화 (옵션)
      - name: Reset base cache (optional)
        run: rm -f out/base_cache.json || true

      - name: Debug — find downCount
        run: |
          echo "Searching for downCount..."
          grep -n "{downCount}" bm20_daily.py || true
          grep -nE '\bdownCount\b' bm20_daily.py || true

      - name: Run BM20 generator
        run: |
          set -euo pipefail
          if [ ! -f bm20_daily.py ]; then
            echo "::error::bm20_daily.py not found at repo root."
            exit 1
          fi
          python bm20_daily.py

      # ✅ 김치/펀딩 추가 (augment_latest.py를 레포 루트에 두었다고 가정)
      - name: Enrich latest.json (kimchi & funding)
        run: |
          set -euo pipefail
          if [ -f augment_latest.py ]; then
            python augment_latest.py || true
          else
            echo "augment_latest.py not found; skip enrichment"
          fi

      # ✅ 산출물은 루트로 복사 (index.html이 루트에서 읽음)
      - name: Prepare site artifacts at repo root
        run: |
          set -euo pipefail
          # latest.json / series.json 탐색 후 루트로 복사
          for f in latest.json bm20_latest.json; do
            if [ -f "$f" ]; then cp -f "$f" latest.json; fi
            if [ -f "site/$f" ]; then cp -f "site/$f" latest.json; fi
            # 날짜 폴더(out/2025-08-23/latest.json)에서도 찾기
            LATEST_IN_OUT=$(find out -maxdepth 2 -type f -name "$f" | sort | tail -n1 || true)
            if [ -n "$LATEST_IN_OUT" ]; then cp -f "$LATEST_IN_OUT" latest.json; fi
          done
          for f in series.json bm20_series.json; do
            if [ -f "$f" ]; then cp -f "$f" series.json; fi
            if [ -f "site/$f" ]; then cp -f "site/$f" series.json; fi
            SERIES_IN_OUT=$(find out -maxdepth 2 -type f -name "$f" | sort | tail -n1 || true)
            if [ -n "$SERIES_IN_OUT" ]; then cp -f "$SERIES_IN_OUT" series.json; fi
          done

          # 선택: 이미지가 site/에 있으면 루트로도 복사(있을 때만)
          for img in bm20_bar_latest.png bm20_trend_latest.png bm20_vs_btc.png; do
            if [ -f "site/$img" ]; then cp -f "site/$img" "$img"; fi
          done

          echo "---- present at root ----"
          ls -l latest.json series.json || true
          ls -l bm20_bar_latest.png bm20_trend_latest.png bm20_vs_btc.png || true

      - name: Debug — tree (top 2 levels)
        run: |
          echo "PWD=$(pwd)"
          find . -maxdepth 2 -type f | sort | sed -n '1,200p'

      - name: Commit & Push outputs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          DATE=$(TZ=Asia/Seoul date +%F)
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # 루트 산출물 + site/ + out/DATE 모두 커밋
          git add -A site \
                     latest.json series.json \
                     bm20_bar_latest.png bm20_trend_latest.png bm20_vs_btc.png || true
          git add -A out/${DATE} || true

          git commit -m "BM20 daily (base=${BM20_BASE_DATE}) ${DATE}" || echo "No changes"
          git pull --rebase
          git push

