name: BM20 data (CSV→Index→JSON commit)

on:
  workflow_dispatch:
  schedule:
    - cron: '30 22 * * *'  # 07:30 KST

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare dirs
        run: |
          mkdir -p out

      # 1) CSV 아카이브 → 인덱스 재계산 (out/)
      - name: Build index from CSVs
        run: |
          python bm20_from_daily_csv.py \
            --archive ./archive \
            --out ./out \
            --rebalance quarterly \
            --weights-source rules \
            --listed-bonus 1.3 \
            --cap BTC:0.30 --cap ETH:0.20 \
            --map bm20_map_btc30.csv
          ls -l out || true

      # 2) 웹용 JSON/CSV 생성 → out/ (필요시 루트에도 미러)
      - name: Export JSON/CSV for web (out/ + root mirror)
        run: |
          # out/에 표준 산출물 생성
          python export_json.py out/bm20_index_from_csv.csv out
          # 루트에서 읽는 소비자가 있다면 미러링
          cp -f out/series.json               series.json
          cp -f out/latest.json               latest.json
          cp -f out/stats.json                stats.json
          cp -f out/bm20_index_from_csv.csv   bm20_index_from_csv.csv

          echo "---- out ----"
          find out -maxdepth 1 -type f -print | sort || true
          echo "---- root (mirrored) ----"
          ls -l series.json latest.json stats.json bm20_index_from_csv.csv || true

      # 3) 레포에 커밋 & 푸시
      - name: Commit & push
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # 변경사항 스테이징: out/* + 루트 미러 파일
          git add out/* series.json latest.json stats.json bm20_index_from_csv.csv 2>/dev/null || true

          # 변경 없으면 스킵
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git commit -m "[skip ci] data: update BM20 outputs $(date -u +'%Y-%m-%dT%H:%M:%SZ')"

          # 충돌 최소화를 위한 리베이스 풀 후 푸시
          git pull --rebase --autostash origin main || true
          git push origin HEAD:main
