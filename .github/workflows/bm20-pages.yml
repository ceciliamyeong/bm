# .github/workflows/bm20-pages.yml
name: Build & Deploy BM20 Viewer (to /viewer)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "5 22 * * *"  # 매일 07:05 KST

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy yfinance matplotlib requests

      # 필요하다면 bm20.py 실행해 out/series.json 생성
      - name: Run BM20
        run: |
          mkdir -p out
          python bm20.py \
            --archive archive \
            --out out \
            --base-date 2018-01-01 \
            --base-value 100 \
            --rebalance quarterly \
            --weights-source rules \
            --listed-bonus 1.3 \
            --cap BTC:0.30 --cap ETH:0.20 --cap XRP:0.05 --cap USDT:0.05

      # btc_series.json 생성이 있다면 여기서 실행
      - name: Build BTC normalized JSON
        run: |
          python scripts/build_btc_json.py

      - name: Stage site to /viewer
        run: |
          mkdir -p _site/viewer
          # 뷰어 파일들을 /viewer 로 배치
          cp -r viewer/* _site/viewer/
          # 데이터도 /viewer 로 배치
          [ -f out/series.json ] && cp out/series.json _site/viewer/ || true
          [ -f viewer/btc_series.json ] && cp viewer/btc_series.json _site/viewer/ || true
          # (선택) 메인 루트 유지하려면 기존 정적 파일을 _site/ 루트에 복사
          # cp -r site_root/* _site/ || true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
