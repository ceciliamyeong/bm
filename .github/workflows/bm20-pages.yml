name: Build & Deploy BM20 Viewer (Interactive)

on:
  workflow_dispatch: {}
  schedule:
    - cron: "5 22 * * *" # 매일 07:05 KST (UTC 22:05)

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy yfinance matplotlib requests

      - name: Run BM20 (produce series.json)
        run: |
          mkdir -p out
          python bm20.py \
            --archive archive \
            --out out \
            --base-date 2018-01-01 \
            --base-value 100 \
            --rebalance quarterly \
            --weights-source rules \
            --listed-bonus 1.3 \
            --cap BTC:0.30 --cap ETH:0.20 --cap XRP:0.05 --cap USDT:0.05
        continue-on-error: false

      - name: Ensure series.json exists (from bm20.py)
        run: |
          if [ ! -f out/series.json ]; then
            echo "::error::out/series.json not found. Make sure bm20.py writes JSON (df_out.to_json(...))."
            exit 1
          fi

      - name: Build BTC normalized JSON for viewer
        run: |
          python scripts/build_btc_json.py

      - name: Stage site
        run: |
          mkdir -p _site
          cp -r viewer/* _site/
          cp out/series.json _site/
          # 선택: latest.json, CSV, PNG도 같이 내보내기
          [ -f out/latest.json ] && cp out/latest.json _site/ || true
          [ -f site/contrib_top.json ] && cp site/contrib_top.json _site/ || true
          [ -f out/bm20_index_from_csv.csv ] && cp out/bm20_index_from_csv.csv _site/ || true
          [ -f out/bm20_index.png ] && cp out/bm20_index.png _site/ || true
          [ -f out/bm20_index_log.png ] && cp out/bm20_index_log.png _site/ || true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
