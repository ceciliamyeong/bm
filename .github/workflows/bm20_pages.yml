name: BM20 Pages (commit data only)

on:
  workflow_dispatch:
  schedule:
    - cron: '30 22 * * *'   # 07:30 KST

permissions:
  contents: write

concurrency:
  group: bm20-pages
  cancel-in-progress: true

env:
  BM20_BASE_DATE: "2018-01-01"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install gspread google-auth google-auth-oauthlib google-auth-httplib2

      - name: Sync bm20_map from Google Sheets
        env:
          GSPREAD_SA_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          BM20_SHEET_ID:   ${{ secrets.SHEET_ID }}
        run: |
          if [ -z "$GSPREAD_SA_JSON" ] || [ -z "$BM20_SHEET_ID" ]; then
            echo "Secrets missing, skip sheet sync"
          else
            python pull_sheet_map.py
            head -n 10 bm20_map_btc30.csv || true
          fi

      # ---- Build (daily CSV → index) ----
      - name: Build index from CSVs
        run: |
          mkdir -p out
          python bm20_from_daily_csv.py --archive ./archive --out ./out \
            --rebalance quarterly --weights-source rules \
            --listed-bonus 1.3 --cap BTC:0.30 --cap ETH:0.20 \
            --map bm20_map_btc30.csv

      # ---- Backfill (current basket, from 2018-01-01) ----
      - name: Backfill long history (current basket)
        run: |
          python backfill_current_basket.py --archive ./archive --map bm20_map_btc30.csv \
            --start 2018-01-01 --out out/backfill_current_basket.csv \
            --btc-cap 0.30 --eth-cap 0.20 --listed-bonus 1.3

      # ---- Merge (safe fallback) ----
      - name: Merge backfill with daily index (safe)
        run: |
          if python merge_backfill.py out/backfill_current_basket.csv out/bm20_index_from_csv.csv \
            --out out/bm20_index_merged.csv; then
            echo "merge ok"
          else
            echo "merge failed → fallback to daily index"
            cp out/bm20_index_from_csv.csv out/bm20_index_merged.csv
          fi

      # ---- Rebase to base = 2018-01-01 (=100) ----
      - name: Rebase merged index to base=2018-01-01
        run: |
          python - <<'PY'
          from scripts.rebase import rebase_csv
          rebase_csv(
            in_csv="out/bm20_index_merged.csv",
            out_csv="out/bm20_index_rebased.csv",
            date_col="date",
            value_col="index",
            base_date="${{ env.BM20_BASE_DATE }}",
            base_value=100.0
          )
          PY
          head -n 3 out/bm20_index_rebased.csv

      # ---- Export JSON/CSV for web (→ out/) ----
      - name: Export JSON/CSV for web (out/)
        run: |
          mkdir -p out
          python export_json.py out/bm20_index_rebased.csv out
          # 필요하면 다른 산출물도 함께 복사
          # cp -f out/bm20_index_rebased.csv out/bm20_index_rebased.csv

      # ---- Diagnostics / Contribution (→ out/) ----
      - name: BTC diagnostics (robust)
        run: |
          python diagnostics_btc_compare.py \
            --merged out/bm20_index_rebased.csv \
            --out-json out/diag_btc.json \
            --start 2018-01-01 || true
          [ -s out/diag_btc.json ] || echo '{"status":"partial","reason":"no output"}' > out/diag_btc.json

      - name: Contribution report (top)
        run: |
          python contrib_report.py --map bm20_map_btc30.csv --out-json out/contrib_top.json

      # ---- Sanity check files (JSON only) ----
      - name: Sanity check files (JSON only)
        run: |
          echo "---- out listing ----"
          ls -la out || true
          test -f out/series.json      || (echo "ERR: series.json missing"; exit 1)
          test -f out/latest.json      || (echo "ERR: latest.json missing"; exit 1)
          test -f out/stats.json       || (echo "ERR: stats.json missing"; exit 1)
          test -f out/diag_btc.json    || (echo "ERR: diag_btc.json missing"; exit 1)
          test -f out/contrib_top.json || (echo "ERR: contrib_top.json missing"; exit 1)

      # ---- Commit & push (safe with autostash) ----
      - name: Commit & push
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch origin
          git pull --rebase --autostash

          git add -A out
          if ! git diff --cached --quiet; then
            git commit -m "[skip ci] data: update BM20 out $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
            git push
          else
            echo "no changes"
          fi

