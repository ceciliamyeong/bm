name: BM20 Pages (Actions)

on:
  workflow_dispatch:
  schedule:
    - cron: '30 22 * * *'   # 07:30 KST

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

env:
  SITE_SRC: .
  BM20_BASE_DATE: "2024-01-01"   # 공개지수 기준일

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - uses: actions/configure-pages@v5

      # ---- Deps ----
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install gspread google-auth google-auth-oauthlib google-auth-httplib2

      # ---- Sheet → map CSV ----
      - name: Sync bm20_map from Google Sheets
        env:
          GSPREAD_SA_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          BM20_SHEET_ID:   ${{ secrets.SHEET_ID }}
        run: |
          python pull_sheet_map.py
          head -n 10 bm20_map_btc30.csv || true

      # ---- Build (daily CSV → index) ----
      - name: Build index from CSVs
        run: |
          mkdir -p out site
          python bm20_from_daily_csv.py --archive ./archive --out ./out \
            --rebalance quarterly --weights-source rules \
            --listed-bonus 1.3 --cap BTC:0.30 --cap ETH:0.20 \
            --map bm20_map_btc30.csv

      # ---- Backfill (current basket, from 2018-01-01) ----
      - name: Backfill long history (current basket)
        run: |
          python backfill_current_basket.py --archive ./archive --map bm20_map_btc30.csv \
            --start 2018-01-01 --out out/backfill_current_basket.csv \
            --btc-cap 0.30 --eth-cap 0.20 --listed-bonus 1.3

      # ---- Merge (safe fallback) ----
      - name: Merge backfill with daily index (safe)
        run: |
          if python merge_backfill.py out/backfill_current_basket.csv out/bm20_index_from_csv.csv \
            --out out/bm20_index_merged.csv; then
            echo "merge ok"
          else
            echo "merge failed → fallback to daily index"
            cp out/bm20_index_from_csv.csv out/bm20_index_merged.csv
          fi

      # ---- Soft sanity: log first value ----
      - name: Sanity (log first value)
        run: |
          python - <<'PY'
          import pandas as pd
          df = pd.read_csv('out/bm20_index_merged.csv')
          print("first index value (merged) =", float(df['index'].iloc[0]))
          PY

      # ---- Rebase to base = 2024-01-01 (=100) ----
      - name: Rebase merged index to base=2024-01-01
        run: |
          python - <<'PY'
          from scripts.rebase import rebase_csv
          rebase_csv(
            in_csv="out/bm20_index_merged.csv",
            out_csv="out/bm20_index_rebased.csv",
            date_col="date",
            value_col="index",
            base_date="${{ env.BM20_BASE_DATE }}",
            base_value=100.0
          )
          PY
          head -n 3 out/bm20_index_rebased.csv

      # ---- Export JSON for web (rebased CSV 사용) ----
      - name: Export JSON for web
        run: |
          python export_json.py out/bm20_index_rebased.csv site

      # ---- Diagnostics (corr/beta) – robust ----
      - name: BTC diagnostics (robust)
        run: |
          python diagnostics_btc_compare.py \
            --merged out/bm20_index_rebased.csv \
            --out-json site/diag_btc.json \
            --start 2018-01-01 || true
          [ -s site/diag_btc.json ] || echo '{"status":"partial","reason":"script did not write"}' > site/diag_btc.json

      # ---- Contribution report (Top) ----
      - name: Contribution report (top)
        run: |
          python contrib_report.py --map bm20_map_btc30.csv --out-json site/contrib_top.json

      # ---- Copy static pages (root → site/) ----
      - name: Copy static pages to site/
        run: |
          set -euo pipefail
          mkdir -p site site/bm

          # 페이지
          [ -f index.html ]      && cp -f index.html      site/index.html      || true
          [ -f latest.html ]     && cp -f latest.html     site/latest.html     || true
          [ -f bm/latest.html ]  && cp -f bm/latest.html  site/bm/latest.html  || true

          # 허브 자산(있다면)
          for f in main.css main.js favicon.ico; do
            [ -f "$f" ] && cp -f "$f" site/ || true
          done

          # 리포트 자산(있다면)
          for f in bm20_btc_eth_line.png bm20_over_btc.png bm20_over_eth.png bm20_vs_bench.csv; do
            [ -f "$f" ] && cp -f "$f" site/ || true
          done

          # bm/ 내부 PNG 등(있다면)
          for f in bm/bm20_bar_latest.png bm/bm20_trend_latest.png; do
            [ -f "$f" ] && cp -f "$f" site/bm/ || true
          done

      # ---- Final sanity for required files ----
      - name: Sanity check files
        run: |
          echo "---- site/ listing ----"
          ls -la site
          test -f site/index.html       || (echo "ERR: index.html missing"; exit 1)
          test -f site/series.json      || (echo "ERR: series.json missing"; exit 1)
          test -f site/latest.json      || (echo "ERR: latest.json missing"; exit 1)
          test -f site/stats.json       || (echo "ERR: stats.json missing";  exit 1)
          test -f site/diag_btc.json    || (echo "ERR: diag_btc.json missing"; exit 1)
          test -f site/contrib_top.json || (echo "ERR: contrib_top.json missing"; exit 1)

      # ---- Upload artifact for Pages ----
      - uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
